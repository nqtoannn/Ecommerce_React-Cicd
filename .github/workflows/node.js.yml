name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci

    - run: npm install

    - name: Install json-server globally
      run: npm install -g json-server

    - name: Start JSON Server
      run: |
        json-server --watch db.json --port 3300 &
        echo $! > json-server-pid.txt
      continue-on-error: true

    - name: Wait for JSON Server to be ready
      run: npx wait-on https://my-ecommerce-data.onrender.com

    - run: npm run build

    - name: Restart JSON Server for tests
      run: |
        pkill -F json-server-pid.txt || true
        json-server --watch db.json --port 3300 &
        echo $! > json-server-pid.txt
        npx wait-on https://my-ecommerce-data.onrender.com

    - run: npm test

    - run: npm run format

    - name: Deploy with gh-pages
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist

    - name: Stop JSON Server
      if: always()
      run: pkill -F json-server-pid.txt || true